======================================================Minimum Characters required to make a String Palindromic
Problem Description
Given a string A of size N consisting only of uppercase alphabets. The only operation allowed is to insert characters in the beginning of the string.
 Find and return how many minimum characters are needed to be inserted to make the string a palindrome string.=========================================
 public class Solution {
    void computeLPS(String s,int[] lps)
    {
        int m=s.length();
        int len=0;
        lps[0]=0;
        int i=1;
        while(i<m)
        {
            if(s.charAt(i)==s.charAt(len))
            {
                len++;
                lps[i]=len;
                i++;
            }
            else
            {
                if(len!=0)
                {
                    len=lps[len-1];
                }
                else
                {
                    lps[i]=0;
                    i++;
                }
            }
        }
    }
    public int solve(String a) 
    {
        StringBuilder s=new StringBuilder(a);
        s=s.reverse();
        String str=a+"$"+s.toString();
        int[] lps=new int[str.length()];
        computeLPS(str, lps);
        return (a.length()-lps[str.length()-1]);
    }
}
